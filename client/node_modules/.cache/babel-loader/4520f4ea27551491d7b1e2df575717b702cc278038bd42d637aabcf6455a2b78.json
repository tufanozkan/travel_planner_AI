{"ast":null,"code":"var _jsxFileName = \"/Users/tufan/Documents/software/travelplanner_ai/client/src/components/CartContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState } from \"react\";\n\n// CartContext oluşturuluyor\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\n\n// CartProvider component'i, children'i alır ve context sağlar\nexport const CartProvider = ({\n  children\n}) => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n\n  // Sepetten ürün çıkarma fonksiyonu\n  const removeFromCart = productId => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n  };\n  const updateQuantity = (productId, quantity) => {\n    setCartItems(cartItems.map(item => item.id === productId ? {\n      ...item,\n      quantity,\n      total: item.price * quantity\n    } : item));\n  };\n\n  // Sepete ürün ekleme fonksiyonu\n  const addToCart = (product, quantity) => {\n    setCartItems(prevItems => {\n      const existingItem = prevItems.find(item => item.id === product.id);\n      if (existingItem) {\n        // Update quantity and total\n        return prevItems.map(item => item.id === product.id ? {\n          ...item,\n          quantity: item.quantity + quantity,\n          total: (item.quantity + quantity) * product.price // Update total based on quantity\n        } : item);\n      }\n      // Add new product if not already in cart\n      return [...prevItems, {\n        ...product,\n        quantity,\n        total: product.price * quantity\n      }];\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      updateQuantity\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"jeyeRm/hZ/3zvXF4PAYTLSHDNRs=\");\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","jsxDEV","_jsxDEV","CartContext","CartProvider","children","_s","cartItems","setCartItems","removeFromCart","productId","prevItems","filter","item","id","updateQuantity","quantity","map","total","price","addToCart","product","existingItem","find","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/tufan/Documents/software/travelplanner_ai/client/src/components/CartContext.js"],"sourcesContent":["import React, { createContext, useState } from \"react\";\n\n// CartContext oluşturuluyor\nexport const CartContext = createContext();\n\n// CartProvider component'i, children'i alır ve context sağlar\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n\n  // Sepetten ürün çıkarma fonksiyonu\n  const removeFromCart = (productId) => {\n    setCartItems((prevItems) =>\n      prevItems.filter((item) => item.id !== productId)\n    );\n  };\n\n  const updateQuantity = (productId, quantity) => {\n    setCartItems(\n      cartItems.map((item) =>\n        item.id === productId\n          ? { ...item, quantity, total: item.price * quantity }\n          : item\n      )\n    );\n  };\n\n  // Sepete ürün ekleme fonksiyonu\n  const addToCart = (product, quantity) => {\n    setCartItems((prevItems) => {\n      const existingItem = prevItems.find((item) => item.id === product.id);\n      if (existingItem) {\n        // Update quantity and total\n        return prevItems.map((item) =>\n          item.id === product.id\n            ? {\n                ...item,\n                quantity: item.quantity + quantity,\n                total: (item.quantity + quantity) * product.price, // Update total based on quantity\n              }\n            : item\n        );\n      }\n      // Add new product if not already in cart\n      return [\n        ...prevItems,\n        { ...product, quantity, total: product.price * quantity },\n      ];\n    });\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cartItems, addToCart, removeFromCart, updateQuantity }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAEtD;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,CAAC;;AAE1C;AACA,OAAO,MAAMK,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMS,cAAc,GAAIC,SAAS,IAAK;IACpCF,YAAY,CAAEG,SAAS,IACrBA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKJ,SAAS,CAClD,CAAC;EACH,CAAC;EAED,MAAMK,cAAc,GAAGA,CAACL,SAAS,EAAEM,QAAQ,KAAK;IAC9CR,YAAY,CACVD,SAAS,CAACU,GAAG,CAAEJ,IAAI,IACjBA,IAAI,CAACC,EAAE,KAAKJ,SAAS,GACjB;MAAE,GAAGG,IAAI;MAAEG,QAAQ;MAAEE,KAAK,EAAEL,IAAI,CAACM,KAAK,GAAGH;IAAS,CAAC,GACnDH,IACN,CACF,CAAC;EACH,CAAC;;EAED;EACA,MAAMO,SAAS,GAAGA,CAACC,OAAO,EAAEL,QAAQ,KAAK;IACvCR,YAAY,CAAEG,SAAS,IAAK;MAC1B,MAAMW,YAAY,GAAGX,SAAS,CAACY,IAAI,CAAEV,IAAI,IAAKA,IAAI,CAACC,EAAE,KAAKO,OAAO,CAACP,EAAE,CAAC;MACrE,IAAIQ,YAAY,EAAE;QAChB;QACA,OAAOX,SAAS,CAACM,GAAG,CAAEJ,IAAI,IACxBA,IAAI,CAACC,EAAE,KAAKO,OAAO,CAACP,EAAE,GAClB;UACE,GAAGD,IAAI;UACPG,QAAQ,EAAEH,IAAI,CAACG,QAAQ,GAAGA,QAAQ;UAClCE,KAAK,EAAE,CAACL,IAAI,CAACG,QAAQ,GAAGA,QAAQ,IAAIK,OAAO,CAACF,KAAK,CAAE;QACrD,CAAC,GACDN,IACN,CAAC;MACH;MACA;MACA,OAAO,CACL,GAAGF,SAAS,EACZ;QAAE,GAAGU,OAAO;QAAEL,QAAQ;QAAEE,KAAK,EAAEG,OAAO,CAACF,KAAK,GAAGH;MAAS,CAAC,CAC1D;IACH,CAAC,CAAC;EACJ,CAAC;EAED,oBACEd,OAAA,CAACC,WAAW,CAACqB,QAAQ;IACnBC,KAAK,EAAE;MAAElB,SAAS;MAAEa,SAAS;MAAEX,cAAc;MAAEM;IAAe,CAAE;IAAAV,QAAA,EAE/DA;EAAQ;IAAAqB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAACvB,EAAA,CAnDWF,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}